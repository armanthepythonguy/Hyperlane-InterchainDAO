import { ethers } from 'ethers';
import { Address, Checkpoint, Domain, HexString } from './types';
/**
 * Utilities for validators to construct and verify checkpoints.
 */
export declare class BaseValidator {
    localDomain: Domain;
    address: Address;
    mailbox: Address;
    constructor(address: Address, localDomain: Domain, mailbox: Address);
    domainHash(): string;
    message(root: HexString, index: number): string;
    messageHash(root: HexString, index: number): Uint8Array;
    recoverAddressFromCheckpoint(checkpoint: Checkpoint): Address;
    matchesSigner(checkpoint: Checkpoint): boolean;
}
/**
 * Extension of BaseValidator that includes ethers signing utilities.
 */
export declare class Validator extends BaseValidator {
    protected signer: ethers.Signer;
    constructor(signer: ethers.Signer, address: Address, localDomain: Domain, mailbox: Address);
    static fromSigner(signer: ethers.Signer, localDomain: Domain, mailbox: Address): Promise<Validator>;
    signCheckpoint(root: HexString, index: number): Promise<Checkpoint>;
}
//# sourceMappingURL=validator.d.ts.map