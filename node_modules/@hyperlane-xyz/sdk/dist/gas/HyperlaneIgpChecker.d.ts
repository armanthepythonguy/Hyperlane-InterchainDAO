import { Ownable } from '@hyperlane-xyz/core';
import { types } from '@hyperlane-xyz/utils';
import { HyperlaneAppChecker } from '../deploy/HyperlaneAppChecker';
import { ChainName } from '../types';
import { HyperlaneIgp } from './HyperlaneIgp';
import { OverheadIgpConfig } from './types';
export declare class HyperlaneIgpChecker extends HyperlaneAppChecker<HyperlaneIgp, OverheadIgpConfig> {
    checkChain(chain: ChainName): Promise<void>;
    checkDomainOwnership(chain: ChainName): Promise<void>;
    checkBytecodes(chain: ChainName): Promise<void>;
    checkOverheadInterchainGasPaymaster(local: ChainName): Promise<void>;
    checkInterchainGasPaymaster(local: ChainName): Promise<void>;
    ownables(chain: ChainName): Promise<{
        [key: string]: Ownable;
    }>;
    getGasOracleAddress(local: ChainName, remote: ChainName): types.Address;
}
//# sourceMappingURL=HyperlaneIgpChecker.d.ts.map