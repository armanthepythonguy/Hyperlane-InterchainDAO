import { InterchainGasPaymaster, OverheadIgp, ProxyAdmin, StorageGasOracle } from '@hyperlane-xyz/core';
import { types } from '@hyperlane-xyz/utils';
import { HyperlaneContracts } from '../contracts';
import { HyperlaneDeployer } from '../deploy/HyperlaneDeployer';
import { MultiProvider } from '../providers/MultiProvider';
import { ChainName } from '../types';
import { IgpFactories } from './contracts';
import { IgpConfig, OverheadIgpConfig } from './types';
export declare class HyperlaneIgpDeployer extends HyperlaneDeployer<OverheadIgpConfig, IgpFactories> {
    constructor(multiProvider: MultiProvider);
    deployInterchainGasPaymaster(chain: ChainName, proxyAdmin: ProxyAdmin, storageGasOracle: StorageGasOracle, config: IgpConfig): Promise<InterchainGasPaymaster>;
    deployOverheadIgp(chain: ChainName, interchainGasPaymasterAddress: types.Address, config: OverheadIgpConfig): Promise<OverheadIgp>;
    deployStorageGasOracle(chain: ChainName): Promise<StorageGasOracle>;
    deployContracts(chain: ChainName, config: OverheadIgpConfig): Promise<HyperlaneContracts<IgpFactories>>;
}
//# sourceMappingURL=HyperlaneIgpDeployer.d.ts.map