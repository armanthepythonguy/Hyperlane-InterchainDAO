"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const ethers_1 = require("ethers");
const number_1 = require("./number");
describe('utils', () => {
    describe('bigToFixed', () => {
        it('converts a BigNumber to a FixedNumber', () => {
            const big = ethers_1.BigNumber.from('1234');
            const fixed = (0, number_1.bigToFixed)(big);
            (0, chai_1.expect)(fixed.toUnsafeFloat()).to.equal(1234);
        });
    });
    describe('fixedToBig', () => {
        it('converts a FixedNumber to a floored BigNumber', () => {
            const fixed = ethers_1.FixedNumber.from('12.34');
            const big = (0, number_1.fixedToBig)(fixed);
            (0, chai_1.expect)(big.toNumber()).to.equal(12);
        });
        it('converts a FixedNumber to a ceilinged BigNumber', () => {
            const fixed = ethers_1.FixedNumber.from('12.34');
            const big = (0, number_1.fixedToBig)(fixed, true);
            (0, chai_1.expect)(big.toNumber()).to.equal(13);
        });
    });
    describe('mulBigAndFixed', () => {
        it('gets the floored product of a BigNumber and FixedNumber', () => {
            const big = ethers_1.BigNumber.from('1000');
            const fixed = ethers_1.FixedNumber.from('1.2345');
            const product = (0, number_1.mulBigAndFixed)(big, fixed);
            (0, chai_1.expect)(product.toNumber()).to.equal(1234);
        });
        it('gets the ceilinged product of a BigNumber and FixedNumber', () => {
            const big = ethers_1.BigNumber.from('1000');
            const fixed = ethers_1.FixedNumber.from('1.2345');
            const product = (0, number_1.mulBigAndFixed)(big, fixed, true);
            (0, chai_1.expect)(product.toNumber()).to.equal(1235);
        });
    });
});
//# sourceMappingURL=utils.test.js.map