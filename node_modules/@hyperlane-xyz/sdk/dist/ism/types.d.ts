import { IAggregationIsm, IMultisigIsm, IRoutingIsm } from '@hyperlane-xyz/core';
import type { types } from '@hyperlane-xyz/utils';
import { ChainMap } from '../types';
export declare type DeployedIsm = IMultisigIsm | IAggregationIsm | IRoutingIsm;
export declare enum ModuleType {
    UNUSED = 0,
    ROUTING = 1,
    AGGREGATION = 2,
    LEGACY_MULTISIG = 3,
    MERKLE_ROOT_MULTISIG = 4,
    MESSAGE_ID_MULTISIG = 5
}
export declare type MultisigIsmConfig = {
    type: ModuleType.LEGACY_MULTISIG | ModuleType.MERKLE_ROOT_MULTISIG | ModuleType.MESSAGE_ID_MULTISIG;
    validators: Array<types.Address>;
    threshold: number;
};
export declare type RoutingIsmConfig = {
    type: ModuleType.ROUTING;
    owner: types.Address;
    domains: ChainMap<IsmConfig>;
};
export declare type AggregationIsmConfig = {
    type: ModuleType.AGGREGATION;
    modules: Array<IsmConfig>;
    threshold: number;
};
export declare type IsmConfig = RoutingIsmConfig | MultisigIsmConfig | AggregationIsmConfig;
//# sourceMappingURL=types.d.ts.map