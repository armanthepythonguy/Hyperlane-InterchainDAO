"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isProxy = exports.proxyAdmin = exports.proxyImplementation = void 0;
const ethers_1 = require("ethers");
const utils_1 = require("@hyperlane-xyz/utils/dist/src/utils");
function proxyImplementation(provider, proxy) {
    return __awaiter(this, void 0, void 0, function* () {
        // Hardcoded storage slot for implementation per EIP-1967
        const storageValue = yield provider.getStorageAt(proxy, '0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc');
        return ethers_1.ethers.utils.getAddress(storageValue.slice(26));
    });
}
exports.proxyImplementation = proxyImplementation;
function proxyAdmin(provider, proxy) {
    return __awaiter(this, void 0, void 0, function* () {
        // Hardcoded storage slot for admin per EIP-1967
        const storageValue = yield provider.getStorageAt(proxy, '0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103');
        return ethers_1.ethers.utils.getAddress(storageValue.slice(26));
    });
}
exports.proxyAdmin = proxyAdmin;
function isProxy(provider, proxy) {
    return __awaiter(this, void 0, void 0, function* () {
        const admin = yield proxyAdmin(provider, proxy);
        return !(0, utils_1.eqAddress)(admin, ethers_1.ethers.constants.AddressZero);
    });
}
exports.isProxy = isProxy;
//# sourceMappingURL=proxy.js.map