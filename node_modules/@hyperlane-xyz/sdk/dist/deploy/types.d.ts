import type { Contract } from 'ethers';
import type { Ownable } from '@hyperlane-xyz/core';
import type { ChainName } from '../types';
export interface CheckerViolation {
    chain: ChainName;
    type: string;
    expected: any;
    actual: any;
    contract?: Contract;
}
export declare enum ViolationType {
    Owner = "Owner",
    NotDeployed = "NotDeployed",
    BytecodeMismatch = "BytecodeMismatch",
    ProxyAdmin = "ProxyAdmin"
}
export interface OwnerViolation extends CheckerViolation {
    type: ViolationType.Owner;
    contract: Ownable;
    name: string;
    actual: string;
    expected: string;
}
export interface ProxyAdminViolation extends CheckerViolation {
    type: ViolationType.ProxyAdmin;
    name: string;
}
export interface NotDeployedViolation extends CheckerViolation {
    type: ViolationType.NotDeployed;
}
export interface BytecodeMismatchViolation extends CheckerViolation {
    type: ViolationType.BytecodeMismatch;
    name: string;
}
//# sourceMappingURL=types.d.ts.map