import { GasRouter } from '@hyperlane-xyz/core';
import { types } from '@hyperlane-xyz/utils';
import { HyperlaneContracts, HyperlaneContractsMap, HyperlaneFactories } from '../contracts';
import { ChainMap } from '../types';
import { HyperlaneRouterDeployer } from './HyperlaneRouterDeployer';
import { GasRouterConfig } from './types';
export declare abstract class GasRouterDeployer<Config extends GasRouterConfig, Factories extends HyperlaneFactories> extends HyperlaneRouterDeployer<Config, Factories> {
    abstract router(contracts: HyperlaneContracts<Factories>): GasRouter;
    enrollRemoteRouters(contractsMap: HyperlaneContractsMap<Factories>, configMap: ChainMap<Config>, foreignRouters?: ChainMap<types.Address>): Promise<void>;
}
//# sourceMappingURL=GasRouterDeployer.d.ts.map