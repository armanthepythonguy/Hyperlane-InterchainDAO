import type { BigNumber } from 'ethers';
import { GasRouter, Router } from '@hyperlane-xyz/core';
import type { types } from '@hyperlane-xyz/utils';
import { HyperlaneApp } from '../HyperlaneApp';
import { HyperlaneContracts, HyperlaneFactories } from '../contracts';
import { ChainMap, ChainName } from '../types';
export { Router } from '@hyperlane-xyz/core';
export declare abstract class RouterApp<Factories extends HyperlaneFactories> extends HyperlaneApp<Factories> {
    abstract router(contracts: HyperlaneContracts<Factories>): Router;
    getSecurityModules: () => Promise<ChainMap<types.Address>>;
    getOwners: () => Promise<ChainMap<types.Address>>;
}
export declare abstract class GasRouterApp<Factories extends HyperlaneFactories, R extends GasRouter> extends RouterApp<Factories> {
    abstract router(contracts: HyperlaneContracts<Factories>): R;
    quoteGasPayment(origin: ChainName, destination: ChainName): Promise<BigNumber>;
}
//# sourceMappingURL=RouterApps.d.ts.map