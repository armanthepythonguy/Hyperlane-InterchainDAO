"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GasRouterApp = exports.RouterApp = void 0;
const HyperlaneApp_1 = require("../HyperlaneApp");
const objects_1 = require("../utils/objects");
class RouterApp extends HyperlaneApp_1.HyperlaneApp {
    constructor() {
        super(...arguments);
        this.getSecurityModules = () => (0, objects_1.promiseObjAll)((0, objects_1.objMap)(this.contractsMap, (_, contracts) => this.router(contracts).interchainSecurityModule()));
        this.getOwners = () => (0, objects_1.promiseObjAll)((0, objects_1.objMap)(this.contractsMap, (_, contracts) => this.router(contracts).owner()));
    }
}
exports.RouterApp = RouterApp;
class GasRouterApp extends RouterApp {
    quoteGasPayment(origin, destination) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.getContracts(origin).router.quoteGasPayment(this.multiProvider.getDomainId(destination));
        });
    }
}
exports.GasRouterApp = GasRouterApp;
//# sourceMappingURL=RouterApps.js.map