import { InterchainQueryRouter } from '@hyperlane-xyz/core';
import { HyperlaneEnvironment } from '../../consts/environments';
import { HyperlaneAddressesMap, HyperlaneContracts } from '../../contracts';
import { MultiProvider } from '../../providers/MultiProvider';
import { RouterApp } from '../../router/RouterApps';
import { InterchainQueryFactories } from './contracts';
export declare class InterchainQuery extends RouterApp<InterchainQueryFactories> {
    router(contracts: HyperlaneContracts<InterchainQueryFactories>): InterchainQueryRouter;
    static fromEnvironment<Env extends HyperlaneEnvironment>(env: Env, multiProvider: MultiProvider): InterchainQuery;
    static fromAddressesMap(addressesMap: HyperlaneAddressesMap<any>, multiProvider: MultiProvider): InterchainQuery;
}
//# sourceMappingURL=InterchainQuery.d.ts.map