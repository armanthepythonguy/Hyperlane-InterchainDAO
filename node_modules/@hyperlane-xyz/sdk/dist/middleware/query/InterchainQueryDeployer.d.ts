import { MultiProvider } from '../../providers/MultiProvider';
import { ProxiedRouterDeployer } from '../../router/ProxiedRouterDeployer';
import { RouterConfig } from '../../router/types';
import { InterchainQueryFactories } from './contracts';
export declare type InterchainQueryConfig = RouterConfig;
export declare class InterchainQueryDeployer extends ProxiedRouterDeployer<InterchainQueryConfig, InterchainQueryFactories, 'interchainQueryRouter'> {
    readonly routerContractName = "interchainQueryRouter";
    constructor(multiProvider: MultiProvider);
    constructorArgs(_: string, __: RouterConfig): Promise<[]>;
    initializeArgs(chain: string, config: RouterConfig): Promise<[
        _mailbox: string,
        _interchainGasPaymaster: string,
        _interchainSecurityModule: string,
        _owner: string
    ]>;
}
//# sourceMappingURL=InterchainQueryDeployer.d.ts.map