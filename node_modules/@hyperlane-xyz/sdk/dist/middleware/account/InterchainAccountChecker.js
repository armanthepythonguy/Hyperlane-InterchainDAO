"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterchainAccountChecker = void 0;
const ProxiedRouterChecker_1 = require("../../router/ProxiedRouterChecker");
const objects_1 = require("../../utils/objects");
class InterchainAccountChecker extends ProxiedRouterChecker_1.ProxiedRouterChecker {
    constructor(multiProvider, app, configMap) {
        // The checker does not expect an ISM in it's config.
        // Instead, we set the ISM to match the ISM address from the app.
        const configMapWithIsm = (0, objects_1.objMap)(configMap, (chain, config) => {
            if (config.interchainSecurityModule) {
                throw new Error('Configuration of ISM address not supported in ICA checker');
            }
            return Object.assign(Object.assign({}, config), { interchainSecurityModule: app.contractsMap[chain].interchainAccountIsm.address });
        });
        super(multiProvider, app, configMapWithIsm);
    }
}
exports.InterchainAccountChecker = InterchainAccountChecker;
//# sourceMappingURL=InterchainAccountChecker.js.map