import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "../../../common";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, ContractTransaction, Overrides, PopulatedTransaction, Signer, utils } from "ethers";
export declare namespace CallLib {
    type CallStruct = {
        to: BytesLike;
        value: BigNumberish;
        data: BytesLike;
    };
    type CallStructOutput = [string, BigNumber, string] & {
        to: string;
        value: BigNumber;
        data: string;
    };
}
export interface IInterchainAccountRouterInterface extends utils.Interface {
    functions: {
        "callRemote(uint32,address,uint256,bytes)": FunctionFragment;
        "callRemote(uint32,(bytes32,uint256,bytes)[])": FunctionFragment;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])": FunctionFragment;
        "getLocalInterchainAccount(uint32,address,address,address)": FunctionFragment;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)": FunctionFragment;
        "getRemoteInterchainAccount(uint32,address)": FunctionFragment;
        "getRemoteInterchainAccount(address,address,address)": FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: "callRemote(uint32,address,uint256,bytes)" | "callRemote(uint32,(bytes32,uint256,bytes)[])" | "callRemoteWithOverrides" | "getLocalInterchainAccount(uint32,address,address,address)" | "getLocalInterchainAccount(uint32,bytes32,bytes32,address)" | "getRemoteInterchainAccount(uint32,address)" | "getRemoteInterchainAccount(address,address,address)"): FunctionFragment;
    encodeFunctionData(functionFragment: "callRemote(uint32,address,uint256,bytes)", values: [BigNumberish, string, BigNumberish, BytesLike]): string;
    encodeFunctionData(functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[])", values: [BigNumberish, CallLib.CallStruct[]]): string;
    encodeFunctionData(functionFragment: "callRemoteWithOverrides", values: [BigNumberish, BytesLike, BytesLike, CallLib.CallStruct[]]): string;
    encodeFunctionData(functionFragment: "getLocalInterchainAccount(uint32,address,address,address)", values: [BigNumberish, string, string, string]): string;
    encodeFunctionData(functionFragment: "getLocalInterchainAccount(uint32,bytes32,bytes32,address)", values: [BigNumberish, BytesLike, BytesLike, string]): string;
    encodeFunctionData(functionFragment: "getRemoteInterchainAccount(uint32,address)", values: [BigNumberish, string]): string;
    encodeFunctionData(functionFragment: "getRemoteInterchainAccount(address,address,address)", values: [string, string, string]): string;
    decodeFunctionResult(functionFragment: "callRemote(uint32,address,uint256,bytes)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[])", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteWithOverrides", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getLocalInterchainAccount(uint32,address,address,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getLocalInterchainAccount(uint32,bytes32,bytes32,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getRemoteInterchainAccount(uint32,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getRemoteInterchainAccount(address,address,address)", data: BytesLike): Result;
    events: {};
}
export interface IInterchainAccountRouter extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: IInterchainAccountRouterInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        "callRemote(uint32,address,uint256,bytes)"(_destination: BigNumberish, _to: string, _value: BigNumberish, _data: BytesLike, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<ContractTransaction>;
        "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, calls: CallLib.CallStruct[], overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<ContractTransaction>;
        callRemoteWithOverrides(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, calls: CallLib.CallStruct[], overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<ContractTransaction>;
        "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<[string]>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _router: BytesLike, _owner: BytesLike, _ism: string, overrides?: CallOverrides): Promise<[string]>;
        "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<[string]>;
        "getRemoteInterchainAccount(address,address,address)"(_router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<[string]>;
    };
    "callRemote(uint32,address,uint256,bytes)"(_destination: BigNumberish, _to: string, _value: BigNumberish, _data: BytesLike, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ContractTransaction>;
    "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, calls: CallLib.CallStruct[], overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ContractTransaction>;
    callRemoteWithOverrides(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, calls: CallLib.CallStruct[], overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ContractTransaction>;
    "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<string>;
    "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _router: BytesLike, _owner: BytesLike, _ism: string, overrides?: CallOverrides): Promise<string>;
    "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<string>;
    "getRemoteInterchainAccount(address,address,address)"(_router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<string>;
    callStatic: {
        "callRemote(uint32,address,uint256,bytes)"(_destination: BigNumberish, _to: string, _value: BigNumberish, _data: BytesLike, overrides?: CallOverrides): Promise<string>;
        "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, calls: CallLib.CallStruct[], overrides?: CallOverrides): Promise<string>;
        callRemoteWithOverrides(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, calls: CallLib.CallStruct[], overrides?: CallOverrides): Promise<string>;
        "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<string>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _router: BytesLike, _owner: BytesLike, _ism: string, overrides?: CallOverrides): Promise<string>;
        "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<string>;
        "getRemoteInterchainAccount(address,address,address)"(_router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<string>;
    };
    filters: {};
    estimateGas: {
        "callRemote(uint32,address,uint256,bytes)"(_destination: BigNumberish, _to: string, _value: BigNumberish, _data: BytesLike, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<BigNumber>;
        "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, calls: CallLib.CallStruct[], overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<BigNumber>;
        callRemoteWithOverrides(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, calls: CallLib.CallStruct[], overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<BigNumber>;
        "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<BigNumber>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _router: BytesLike, _owner: BytesLike, _ism: string, overrides?: CallOverrides): Promise<BigNumber>;
        "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<BigNumber>;
        "getRemoteInterchainAccount(address,address,address)"(_router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<BigNumber>;
    };
    populateTransaction: {
        "callRemote(uint32,address,uint256,bytes)"(_destination: BigNumberish, _to: string, _value: BigNumberish, _data: BytesLike, overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<PopulatedTransaction>;
        "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, calls: CallLib.CallStruct[], overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<PopulatedTransaction>;
        callRemoteWithOverrides(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, calls: CallLib.CallStruct[], overrides?: Overrides & {
            from?: string | Promise<string>;
        }): Promise<PopulatedTransaction>;
        "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _router: BytesLike, _owner: BytesLike, _ism: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getRemoteInterchainAccount(address,address,address)"(_router: string, _owner: string, _ism: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
    };
}
//# sourceMappingURL=IInterchainAccountRouter.d.ts.map