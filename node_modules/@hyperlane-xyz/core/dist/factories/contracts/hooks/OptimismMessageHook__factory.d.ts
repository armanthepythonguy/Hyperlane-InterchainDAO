import type { OptimismMessageHook, OptimismMessageHookInterface } from "../../../contracts/hooks/OptimismMessageHook";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
declare type OptimismMessageHookConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class OptimismMessageHook__factory extends ContractFactory {
    constructor(...args: OptimismMessageHookConstructorParams);
    deploy(_destinationDomain: BigNumberish, _messenger: string, _ism: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<OptimismMessageHook>;
    getDeployTransaction(_destinationDomain: BigNumberish, _messenger: string, _ism: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): OptimismMessageHook;
    connect(signer: Signer): OptimismMessageHook__factory;
    static readonly bytecode = "0x60e060405234801561001057600080fd5b5060405161071838038061071883398101604081905261002f9161019e565b8263ffffffff1660000361009b5760405162461bcd60e51b815260206004820152602860248201527f4f7074696d69736d486f6f6b3a20696e76616c69642064657374696e6174696f60448201526737103237b6b0b4b760c11b60648201526084015b60405180910390fd5b6001600160a01b0381166100f15760405162461bcd60e51b815260206004820152601960248201527f4f7074696d69736d486f6f6b3a20696e76616c69642049534d000000000000006044820152606401610092565b63ffffffff831660805261010f82610173602090811b6103cc17901c565b61015b5760405162461bcd60e51b815260206004820152601f60248201527f4f7074696d69736d486f6f6b3a20696e76616c6964206d657373656e676572006044820152606401610092565b6001600160a01b0391821660a0521660c052506101ec565b6001600160a01b03163b151590565b80516001600160a01b038116811461019957600080fd5b919050565b6000806000606084860312156101b357600080fd5b835163ffffffff811681146101c757600080fd5b92506101d560208501610182565b91506101e360408501610182565b90509250925092565b60805160a05160c0516104ea61022e6000396000818160c5015261036101526000818161011e0152610334015260008181605601526101b101526104ea6000f3fe60806040526004361061003f5760003560e01c80632858c55a146100445780633fa843b0146100925780634deefab2146100b35780636140e0e61461010c575b600080fd5b34801561005057600080fd5b506100787f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6100a56100a03660046103e8565b610140565b604051908152602001610089565b3480156100bf57600080fd5b506100e77f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b34801561011857600080fd5b506100e77f000000000000000000000000000000000000000000000000000000000000000081565b600034156101af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f7074696d69736d486f6f6b3a206e6f2076616c756520616c6c6f776564000060448201526064015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168363ffffffff161461026a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4f7074696d69736d486f6f6b3a20696e76616c69642064657374696e6174696f60448201527f6e20646f6d61696e00000000000000000000000000000000000000000000000060648201526084016101a6565b60405133602482015260448101839052600090606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9ed1048f00000000000000000000000000000000000000000000000000000000179052517f3dbb202b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690633dbb202b90610390907f0000000000000000000000000000000000000000000000000000000000000000908590621d4c009060040161041d565b600060405180830381600087803b1580156103aa57600080fd5b505af11580156103be573d6000803e3d6000fd5b506000979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600080604083850312156103fb57600080fd5b823563ffffffff8116811461040f57600080fd5b946020939093013593505050565b73ffffffffffffffffffffffffffffffffffffffff8416815260006020606081840152845180606085015260005b818110156104675786810183015185820160800152820161044b565b5060006080828601015260807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505063ffffffff8316604083015294935050505056fea264697066735822122016eff873a074597163a3a9991a1e1a00fcdb476b699345fad380d9bd4098438364736f6c63430008110033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): OptimismMessageHookInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): OptimismMessageHook;
}
export {};
//# sourceMappingURL=OptimismMessageHook__factory.d.ts.map