import type { InterchainAccountIsm, InterchainAccountIsmInterface } from "../../../../contracts/isms/routing/InterchainAccountIsm";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, Overrides } from "ethers";
declare type InterchainAccountIsmConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class InterchainAccountIsm__factory extends ContractFactory {
    constructor(...args: InterchainAccountIsmConstructorParams);
    deploy(_mailbox: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<InterchainAccountIsm>;
    getDeployTransaction(_mailbox: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): InterchainAccountIsm;
    connect(signer: Signer): InterchainAccountIsm__factory;
    static readonly bytecode = "0x60a060405234801561001057600080fd5b5060405161056338038061056383398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516104d961008a600039600060f401526104d96000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806315ce45a2146100465780636465e69f14610083578063f7e83aee1461009d575b600080fd5b6100596100543660046102a9565b6100c0565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008b600181565b60405160ff909116815260200161007a565b6100b06100ab3660046102eb565b610192565b604051901515815260200161007a565b6000806100d56100d08585610228565b610244565b905073ffffffffffffffffffffffffffffffffffffffff8116610189577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e5f516e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101819190610357565b91505061018c565b90505b92915050565b600061019e83836100c0565b73ffffffffffffffffffffffffffffffffffffffff1663f7e83aee868686866040518563ffffffff1660e01b81526004016101dc94939291906103dd565b6020604051808303816000875af11580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f919061040f565b95945050505050565b36600061023883604d8187610431565b915091505b9250929050565b60006102546040602c8486610431565b61025d9161045b565b60601c9392505050565b60008083601f84011261027957600080fd5b50813567ffffffffffffffff81111561029157600080fd5b60208301915083602082850101111561023d57600080fd5b600080602083850312156102bc57600080fd5b823567ffffffffffffffff8111156102d357600080fd5b6102df85828601610267565b90969095509350505050565b6000806000806040858703121561030157600080fd5b843567ffffffffffffffff8082111561031957600080fd5b61032588838901610267565b9096509450602087013591508082111561033e57600080fd5b5061034b87828801610267565b95989497509550505050565b60006020828403121561036957600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461038d57600080fd5b9392505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006103f1604083018688610394565b8281036020840152610404818587610394565b979650505050505050565b60006020828403121561042157600080fd5b8151801515811461038d57600080fd5b6000808585111561044157600080fd5b8386111561044e57600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000813581811691601485101561049b5780818660140360031b1b83161692505b50509291505056fea26469706673582212207ccdc818039c0cd0d3abee88b4e8214102ea7b4801997454032023d663e3cde864736f6c63430008110033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): InterchainAccountIsmInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): InterchainAccountIsm;
}
export {};
//# sourceMappingURL=InterchainAccountIsm__factory.d.ts.map