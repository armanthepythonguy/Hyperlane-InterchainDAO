"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptimismISM__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_l2Messenger",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "NotCrossChainCall",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "messageId",
                type: "bytes32",
            },
        ],
        name: "ReceivedMessage",
        type: "event",
    },
    {
        inputs: [],
        name: "l1Hook",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "moduleType",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_l1Hook",
                type: "address",
            },
        ],
        name: "setOptimismHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "verifiedMessageIds",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sender",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "_messageId",
                type: "bytes32",
            },
        ],
        name: "verifyMessageId",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b50604051610a4e380380610a4e83398101604081905261002f916100b5565b6001600160a01b038116608052610050816100a6602090811b61057a17901c565b6100a05760405162461bcd60e51b815260206004820181905260248201527f4f7074696d69736d49534d3a20696e76616c6964204c324d657373656e676572604482015260640160405180910390fd5b506100e5565b6001600160a01b03163b151590565b6000602082840312156100c757600080fd5b81516001600160a01b03811681146100de57600080fd5b9392505050565b608051610947610107600039600081816105af015261060c01526109476000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80639ed1048f116100505780639ed1048f146100f0578063a8df2b6914610103578063f7e83aee1461014157600080fd5b8063106ddb18146100775780636465e69f146100c157806386f8011f146100db575b600080fd5b6002546100979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c9600081565b60405160ff90911681526020016100b8565b6100ee6100e9366004610759565b610154565b005b6100ee6100fe36600461077d565b6103a1565b6101316101113660046107a9565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100b8565b61013161014f366004610822565b6104ea565b600054610100900460ff16158080156101745750600054600160ff909116105b8061018e5750303b15801561018e575060005460ff166001145b61021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561027d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b73ffffffffffffffffffffffffffffffffffffffff82166102fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f7074696d69736d49534d3a20696e76616c6964206c31486f6f6b00000000006044820152606401610216565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416179055801561039d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60025473ffffffffffffffffffffffffffffffffffffffff166103c2610596565b73ffffffffffffffffffffffffffffffffffffffff1614610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f7074696d69736d49534d3a2073656e646572206973206e6f7420746865206860448201527f6f6f6b00000000000000000000000000000000000000000000000000000000006064820152608401610216565b600081815260016020818152604080842073ffffffffffffffffffffffffffffffffffffffff8716808652925280842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016909317909255905183927f8772b97689ed084ec4a4d86ec0d3b5c75e46d77b4c0cc886c5aaaf602cbc933291a35050565b60008061052c84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063592505050565b9050600061053a8585610640565b600092835260016020908152604080852073ffffffffffffffffffffffffffffffffffffffff90931685529190529091205460ff16915050949350505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314610607576040517f4a74df9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106307f000000000000000000000000000000000000000000000000000000000000000061065b565b905090565b805160209091012090565b600061065261064f848461071b565b90565b90505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821633146106ac576040517f4a74df9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610655919061088e565b600061072b6029600984866108ab565b610652916108d5565b73ffffffffffffffffffffffffffffffffffffffff8116811461075657600080fd5b50565b60006020828403121561076b57600080fd5b813561077681610734565b9392505050565b6000806040838503121561079057600080fd5b823561079b81610734565b946020939093013593505050565b600080604083850312156107bc57600080fd5b8235915060208301356107ce81610734565b809150509250929050565b60008083601f8401126107eb57600080fd5b50813567ffffffffffffffff81111561080357600080fd5b60208301915083602082850101111561081b57600080fd5b9250929050565b6000806000806040858703121561083857600080fd5b843567ffffffffffffffff8082111561085057600080fd5b61085c888389016107d9565b9096509450602087013591508082111561087557600080fd5b50610882878288016107d9565b95989497509550505050565b6000602082840312156108a057600080fd5b815161077681610734565b600080858511156108bb57600080fd5b838611156108c857600080fd5b5050820193919092039150565b80356020831015610655577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea2646970667358221220dde3b0b17b74d0c4e0cf055928059e19516534f9e0cf45914bf81d9c134833e664736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class OptimismISM__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_l2Messenger, overrides) {
        return super.deploy(_l2Messenger, overrides || {});
    }
    getDeployTransaction(_l2Messenger, overrides) {
        return super.getDeployTransaction(_l2Messenger, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OptimismISM__factory = OptimismISM__factory;
OptimismISM__factory.bytecode = _bytecode;
OptimismISM__factory.abi = _abi;
//# sourceMappingURL=OptimismISM__factory.js.map