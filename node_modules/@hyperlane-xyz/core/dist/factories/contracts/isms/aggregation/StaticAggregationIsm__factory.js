"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticAggregationIsm__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "moduleType",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "modulesAndThreshold",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_metadata",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610883806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636465e69f146100465780636f72df7514610065578063f7e83aee14610086575b600080fd5b61004e600281565b60405160ff90911681526020015b60405180910390f35b610078610073366004610401565b6100a9565b60405161005c929190610443565b6100996100943660046104a7565b6100d4565b604051901515815260200161005c565b606060006100b56102ba565b8060200190518101906100c8919061057c565b915091505b9250929050565b60008060006100e385856100a9565b8151919350915060005b818160ff161015610240576101038989836102ea565b1561022e576000848260ff168151811061011f5761011f610671565b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff1663f7e83aee6101508c8c8661030a565b8b8b6040518563ffffffff1660e01b815260040161017194939291906106e9565b6020604051808303816000875af1158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b4919061071b565b61021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f217665726966790000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61022a600185610773565b9350505b8061023881610792565b9150506100ed565b5060ff8216156102ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c64000000000000000000000000000000000000000000006044820152606401610216565b506001979650505050505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b6000806102f8858585610343565b5063ffffffff16151595945050505050565b36600080600061031b878787610343565b909250905061033563ffffffff808316908416888a6107b1565b935093505050935093915050565b60008080610355600460ff86166107db565b6103609060026107db565b9050600061036f6004836107f2565b9050600061037e6004836107f2565b905061038c8284898b6107b1565b61039591610805565b60e01c6103a482848a8c6107b1565b6103ad91610805565b60e01c94509450505050935093915050565b60008083601f8401126103d157600080fd5b50813567ffffffffffffffff8111156103e957600080fd5b6020830191508360208285010111156100cd57600080fd5b6000806020838503121561041457600080fd5b823567ffffffffffffffff81111561042b57600080fd5b610437858286016103bf565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b8281101561049257815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610460565b50505060ff9490941692019190915250919050565b600080600080604085870312156104bd57600080fd5b843567ffffffffffffffff808211156104d557600080fd5b6104e1888389016103bf565b909650945060208701359150808211156104fa57600080fd5b50610507878288016103bf565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff8116811461056657600080fd5b919050565b805160ff8116811461056657600080fd5b6000806040838503121561058f57600080fd5b825167ffffffffffffffff808211156105a757600080fd5b818501915085601f8301126105bb57600080fd5b81516020828211156105cf576105cf610513565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110868211171561061257610612610513565b60405292835281830193508481018201928984111561063057600080fd5b948201945b838610156106555761064686610542565b85529482019493820193610635565b9650610664905087820161056b565b9450505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006106fd6040830186886106a0565b82810360208401526107108185876106a0565b979650505050505050565b60006020828403121561072d57600080fd5b8151801515811461073d57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60ff828116828216039081111561078c5761078c610744565b92915050565b600060ff821660ff81036107a8576107a8610744565b60010192915050565b600080858511156107c157600080fd5b838611156107ce57600080fd5b5050820193919092039150565b808202811582820484141761078c5761078c610744565b8082018082111561078c5761078c610744565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156108455780818660040360031b1b83161692505b50509291505056fea2646970667358221220df7b2dee736dde11b3fb89309ef4a66a2e0d80be7270eb2487bd5a042ae1229464736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class StaticAggregationIsm__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.StaticAggregationIsm__factory = StaticAggregationIsm__factory;
StaticAggregationIsm__factory.bytecode = _bytecode;
StaticAggregationIsm__factory.abi = _abi;
//# sourceMappingURL=StaticAggregationIsm__factory.js.map