"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockCircleMessageTransmitter__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract MockToken",
                name: "_token",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_source",
                type: "uint32",
            },
            {
                internalType: "uint64",
                name: "_nonce",
                type: "uint64",
            },
        ],
        name: "hashSourceAndNonce",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_nonceId",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "process",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "receiveMessage",
        outputs: [
            {
                internalType: "bool",
                name: "success",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_nonceId",
                type: "bytes32",
            },
        ],
        name: "usedNonces",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161050d38038061050d83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61047a806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806337e3d6bc1461005157806357ecfd28146100f1578063fd2b1db314610118578063feb617241461012d575b600080fd5b6100de61005f36600461021a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1660208201527fffffffffffffffff00000000000000000000000000000000000000000000000060c083901b166024820152600090602c0160405160208183030381529060405280519060200120905092915050565b6040519081526020015b60405180910390f35b6101086100ff3660046102e1565b50600192915050565b60405190151581526020016100e8565b61012b6101263660046103da565b610150565b005b61010861013b36600461042b565b60009081526020819052604090205460ff1690565b6000838152602081905260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091555490517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b1580156101fd57600080fd5b505af1158015610211573d6000803e3d6000fd5b50505050505050565b6000806040838503121561022d57600080fd5b823563ffffffff8116811461024157600080fd5b9150602083013567ffffffffffffffff8116811461025e57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008083601f8401126102aa57600080fd5b50813567ffffffffffffffff8111156102c257600080fd5b6020830191508360208285010111156102da57600080fd5b9250929050565b6000806000604084860312156102f657600080fd5b833567ffffffffffffffff8082111561030e57600080fd5b818601915086601f83011261032257600080fd5b81358181111561033457610334610269565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561037a5761037a610269565b8160405282815289602084870101111561039357600080fd5b8260208601602083013760006020848301015280975050505060208601359150808211156103c057600080fd5b506103cd86828701610298565b9497909650939450505050565b6000806000606084860312156103ef57600080fd5b83359250602084013573ffffffffffffffffffffffffffffffffffffffff8116811461041a57600080fd5b929592945050506040919091013590565b60006020828403121561043d57600080fd5b503591905056fea26469706673582212202e902d8c378003efa40d5224b255230f559d3a3fd9e1f79a682963f1eec1b16664736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class MockCircleMessageTransmitter__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_token, overrides) {
        return super.deploy(_token, overrides || {});
    }
    getDeployTransaction(_token, overrides) {
        return super.getDeployTransaction(_token, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockCircleMessageTransmitter__factory = MockCircleMessageTransmitter__factory;
MockCircleMessageTransmitter__factory.bytecode = _bytecode;
MockCircleMessageTransmitter__factory.abi = _abi;
//# sourceMappingURL=MockCircleMessageTransmitter__factory.js.map