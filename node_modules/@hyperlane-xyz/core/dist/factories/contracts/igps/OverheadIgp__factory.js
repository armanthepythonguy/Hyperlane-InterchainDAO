"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OverheadIgp__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_innerIgp",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "gasOverhead",
                type: "uint256",
            },
        ],
        name: "DestinationGasOverheadSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "messageId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "gasAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "payment",
                type: "uint256",
            },
        ],
        name: "GasPayment",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_destinationDomain",
                type: "uint32",
            },
            {
                internalType: "uint256",
                name: "_gasAmount",
                type: "uint256",
            },
        ],
        name: "destinationGasAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        name: "destinationGasOverhead",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "innerIgp",
        outputs: [
            {
                internalType: "contract IInterchainGasPaymaster",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_messageId",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "_destinationDomain",
                type: "uint32",
            },
            {
                internalType: "uint256",
                name: "_gasAmount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_refundAddress",
                type: "address",
            },
        ],
        name: "payForGas",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_destinationDomain",
                type: "uint32",
            },
            {
                internalType: "uint256",
                name: "_gasAmount",
                type: "uint256",
            },
        ],
        name: "quoteGasPayment",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "domain",
                        type: "uint32",
                    },
                    {
                        internalType: "uint256",
                        name: "gasOverhead",
                        type: "uint256",
                    },
                ],
                internalType: "struct OverheadIgp.DomainConfig[]",
                name: "configs",
                type: "tuple[]",
            },
        ],
        name: "setDestinationGasOverheads",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b506040516109bc3803806109bc83398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b6080516108ca6100f2600039600081816101370152818161020b015261037c01526108ca6000f3fe6080604052600436106100965760003560e01c806378ecc5ac1161006957806394e922981161004e57806394e92298146101a9578063a6929793146101c9578063f2fde38b146101e957600080fd5b806378ecc5ac146101255780638da5cb5b1461017e57600080fd5b8063026c33481461009b57806311bf2c18146100db5780632fd88292146100f0578063715018a614610110575b600080fd5b3480156100a757600080fd5b506100c86100b6366004610693565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ee6100e93660046106d2565b610209565b005b3480156100fc57600080fd5b506100c861010b366004610718565b6102f0565b34801561011c57600080fd5b506100ee61031a565b34801561013157600080fd5b506101597f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d2565b34801561018a57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610159565b3480156101b557600080fd5b506100ee6101c4366004610742565b61032e565b3480156101d557600080fd5b506100c86101e4366004610718565b610378565b3480156101f557600080fd5b506100ee6102043660046107b7565b610444565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166311bf2c1834868661025288886102f0565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935263ffffffff919091166024830152604482015273ffffffffffffffffffffffffffffffffffffffff851660648201526084016000604051808303818588803b1580156102d157600080fd5b505af11580156102e5573d6000803e3d6000fd5b505050505050505050565b63ffffffff8216600090815260016020526040812054610311908390610801565b90505b92915050565b610322610500565b61032c6000610581565b565b610336610500565b60005b818110156103735761036183838381811061035657610356610814565b9050604002016105f6565b8061036b81610843565b915050610339565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a6929793846103c186866102f0565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815263ffffffff9290921660048301526024820152604401602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610311919061087b565b61044c610500565b73ffffffffffffffffffffffffffffffffffffffff81166104f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104fd81610581565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461032c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6020810180359060019060009061060d9085610693565b63ffffffff1681526020808201929092526040016000209190915561063490820182610693565b63ffffffff167f8685397d4fa4489d21ed19c302e3719e5b1f0acd46b0ef39b3775f5bfa85b910826020013560405161066f91815260200190565b60405180910390a250565b803563ffffffff8116811461068e57600080fd5b919050565b6000602082840312156106a557600080fd5b6103118261067a565b803573ffffffffffffffffffffffffffffffffffffffff8116811461068e57600080fd5b600080600080608085870312156106e857600080fd5b843593506106f86020860161067a565b92506040850135915061070d606086016106ae565b905092959194509250565b6000806040838503121561072b57600080fd5b6107348361067a565b946020939093013593505050565b6000806020838503121561075557600080fd5b823567ffffffffffffffff8082111561076d57600080fd5b818501915085601f83011261078157600080fd5b81358181111561079057600080fd5b8660208260061b85010111156107a557600080fd5b60209290920196919550909350505050565b6000602082840312156107c957600080fd5b610311826106ae565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610314576103146107d2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610874576108746107d2565b5060010190565b60006020828403121561088d57600080fd5b505191905056fea264697066735822122029b2344b8c07fda43bc26246e6e09c01c911e48b05987396b0120fb74c3d4fda64736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class OverheadIgp__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_innerIgp, overrides) {
        return super.deploy(_innerIgp, overrides || {});
    }
    getDeployTransaction(_innerIgp, overrides) {
        return super.getDeployTransaction(_innerIgp, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OverheadIgp__factory = OverheadIgp__factory;
OverheadIgp__factory.bytecode = _bytecode;
OverheadIgp__factory.abi = _abi;
//# sourceMappingURL=OverheadIgp__factory.js.map