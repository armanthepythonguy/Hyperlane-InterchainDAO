import type { BadRecipient1, BadRecipient1Interface } from "../../../../contracts/test/bad-recipient/BadRecipient1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, Overrides } from "ethers";
declare type BadRecipient1ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BadRecipient1__factory extends ContractFactory {
    constructor(...args: BadRecipient1ConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<BadRecipient1>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): BadRecipient1;
    connect(signer: Signer): BadRecipient1__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060fc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806356d5d47514602d575b600080fd5b60386028366004603a565b005b60008060008060608587031215604f57600080fd5b843563ffffffff81168114606257600080fd5b935060208501359250604085013567ffffffffffffffff80821115608557600080fd5b818701915087601f830112609857600080fd5b81358181111560a657600080fd5b88602082850101111560b757600080fd5b9598949750506020019450505056fea264697066735822122088d10c4db7c6077adf3af6d6bef9983e35452bcebf8fb0d0e873f63cd8038cfe64736f6c63430008110033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): BadRecipient1Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): BadRecipient1;
}
export {};
//# sourceMappingURL=BadRecipient1__factory.d.ts.map