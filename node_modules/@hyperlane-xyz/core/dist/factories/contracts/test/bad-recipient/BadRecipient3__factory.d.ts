import type { BadRecipient3, BadRecipient3Interface } from "../../../../contracts/test/bad-recipient/BadRecipient3";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, Overrides } from "ethers";
declare type BadRecipient3ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BadRecipient3__factory extends ContractFactory {
    constructor(...args: BadRecipient3ConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<BadRecipient3>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): BadRecipient3;
    connect(signer: Signer): BadRecipient3__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061010d806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806356d5d47514602d575b600080fd5b603c6038366004604b565b603e565b005b62abcdef60005260206000fd5b60008060008060608587031215606057600080fd5b843563ffffffff81168114607357600080fd5b935060208501359250604085013567ffffffffffffffff80821115609657600080fd5b818701915087601f83011260a957600080fd5b81358181111560b757600080fd5b88602082850101111560c857600080fd5b9598949750506020019450505056fea2646970667358221220fe1bc5cf542a1f5696295af8ff95364210aa82b0afae6c63d190d2e603bb68fb64736f6c63430008110033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): BadRecipient3Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): BadRecipient3;
}
export {};
//# sourceMappingURL=BadRecipient3__factory.d.ts.map