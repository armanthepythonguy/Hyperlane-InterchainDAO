import type { BadRecipient6, BadRecipient6Interface } from "../../../../contracts/test/bad-recipient/BadRecipient6";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, Overrides } from "ethers";
declare type BadRecipient6ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BadRecipient6__factory extends ContractFactory {
    constructor(...args: BadRecipient6ConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<BadRecipient6>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): BadRecipient6;
    connect(signer: Signer): BadRecipient6__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060fc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806356d5d47514602d575b600080fd5b60386028366004603a565b005b60008060008060608587031215604f57600080fd5b843563ffffffff81168114606257600080fd5b935060208501359250604085013567ffffffffffffffff80821115608557600080fd5b818701915087601f830112609857600080fd5b81358181111560a657600080fd5b88602082850101111560b757600080fd5b9598949750506020019450505056fea26469706673582212202548b75ae837943c71e3e4edd951ef9679a94cb6574118754b928c01f64368ef64736f6c63430008110033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): BadRecipient6Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): BadRecipient6;
}
export {};
//# sourceMappingURL=BadRecipient6__factory.d.ts.map