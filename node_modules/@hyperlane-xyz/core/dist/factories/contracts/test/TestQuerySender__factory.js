"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestQuerySender__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "result",
                type: "address",
            },
        ],
        name: "ReceivedAddressResult",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        name: "ReceivedBytes32Result",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "result",
                type: "uint256",
            },
        ],
        name: "ReceivedUint256Result",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_result",
                type: "address",
            },
        ],
        name: "handleQueryAddressResult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_result",
                type: "bytes32",
            },
        ],
        name: "handleQueryBytes32Result",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_result",
                type: "uint256",
            },
        ],
        name: "handleQueryUint256Result",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_queryRouterAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_interchainGasPaymaster",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "lastAddressResult",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastBytes32Result",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastUint256Result",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_destinationDomain",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "_target",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_targetData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_gasAmount",
                type: "uint256",
            },
        ],
        name: "queryAddress",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_destinationDomain",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "_target",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_targetData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_gasAmount",
                type: "uint256",
            },
        ],
        name: "queryBytes32",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_destinationDomain",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "_target",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_targetData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_gasAmount",
                type: "uint256",
            },
        ],
        name: "queryUint256",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610995806100206000396000f3fe6080604052600436106100b15760003560e01c80635956d610116100695780639bc2fc6c1161004e5780639bc2fc6c146101cb578063d69661871461021d578063ec2c076b1461023d57600080fd5b80635956d610146101985780639a69b646146101ab57600080fd5b806334ef642c1161009a57806334ef642c146100f4578063485cc9551461010a5780635520f36f1461017857600080fd5b8063150db4a8146100b65780632c5307cf146100df575b600080fd5b3480156100c257600080fd5b506100cc60045481565b6040519081526020015b60405180910390f35b6100f26100ed3660046106e9565b610250565b005b34801561010057600080fd5b506100cc60035481565b34801561011657600080fd5b506100f261012536600461078a565b6000805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560018054929093169116179055565b34801561018457600080fd5b506100f26101933660046107bd565b610285565b6100f26101a63660046106e9565b6102bd565b3480156101b757600080fd5b506100f26101c63660046107d6565b6102eb565b3480156101d757600080fd5b506002546101f89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d6565b34801561022957600080fd5b506100f26102383660046107bd565b61037b565b6100f261024b3660046106e9565b6103b3565b61027e858585857fd696618700000000000000000000000000000000000000000000000000000000866103dd565b5050505050565b6040518181527ff2ef554b977530c721a8d510ec8ac455ae8cb0e35625475d0f8732e8a5a2cb0e9060200160405180910390a1600355565b61027e858585857f9a69b64600000000000000000000000000000000000000000000000000000000866103dd565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f36de86782a8492c9a38d307c59ec9159da79f889af8cd357925017867e895d8f9060200160405180910390a1600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040518181527f01ee73d9a638efac5779e3690ad8edd267393c69a4903391cc34bce642ede6799060200160405180910390a1600455565b61027e858585857f5520f36f00000000000000000000000000000000000000000000000000000000865b604080516001808252818301909252600091816020015b61041f6040805160808101825260009181019182526060808201529081908152602001606081525090565b8152602001906001900390816103f45790505090506104b78686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040517fffffffff000000000000000000000000000000000000000000000000000000008916602082015260240191506104a39050565b60405160208183030381529060405261061b565b816000815181106104ca576104ca6107f1565b6020908102919091010152600080546040517f8cc02cab00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690638cc02cab9061052e908b908690600401610884565b6020604051808303816000875af115801561054d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105719190610946565b6001546040517f11bf2c180000000000000000000000000000000000000000000000000000000081526004810183905263ffffffff8b1660248201526044810186905233606482015291925073ffffffffffffffffffffffffffffffffffffffff16906311bf2c189034906084016000604051808303818588803b1580156105f857600080fd5b505af115801561060c573d6000803e3d6000fd5b50505050505050505050505050565b6106466040805160808101825260009181019182526060808201529081908152602001606081525090565b604051806040016040528061065b868661066b565b8152602001929092525092915050565b6040805180820182526000808252606060208084018290528451808601865292835291820152825180840190935273ffffffffffffffffffffffffffffffffffffffff851683528201839052905b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146106e457600080fd5b919050565b60008060008060006080868803121561070157600080fd5b853563ffffffff8116811461071557600080fd5b9450610723602087016106c0565b9350604086013567ffffffffffffffff8082111561074057600080fd5b818801915088601f83011261075457600080fd5b81358181111561076357600080fd5b89602082850101111561077557600080fd5b96999598505060200195606001359392505050565b6000806040838503121561079d57600080fd5b6107a6836106c0565b91506107b4602084016106c0565b90509250929050565b6000602082840312156107cf57600080fd5b5035919050565b6000602082840312156107e857600080fd5b6106b9826106c0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815180845260005b818110156108465760208185018101518683018201520161082a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000604080830163ffffffff8616845260208281860152818651808452606093508387019150838160051b88010183890160005b83811015610936578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa00185528151805189855280518a8601528701518885018a905261090a6080860182610820565b91880151858303868a01529190506109228183610820565b9688019694505050908501906001016108b8565b50909a9950505050505050505050565b60006020828403121561095857600080fd5b505191905056fea2646970667358221220c9265e023291deb14500e1c34d98ebb6b47ec7210ab5b7f3255c22b75f24e4ff64736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class TestQuerySender__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestQuerySender__factory = TestQuerySender__factory;
TestQuerySender__factory.bytecode = _bytecode;
TestQuerySender__factory.abi = _abi;
//# sourceMappingURL=TestQuerySender__factory.js.map