"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestLegacyMultisigIsm__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "commitment",
                type: "bytes32",
            },
        ],
        name: "CommitmentUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "threshold",
                type: "uint8",
            },
        ],
        name: "ThresholdSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "validator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "validatorCount",
                type: "uint256",
            },
        ],
        name: "ValidatorEnrolled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "validator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "validatorCount",
                type: "uint256",
            },
        ],
        name: "ValidatorUnenrolled",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        name: "commitment",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "_validator",
                type: "address",
            },
        ],
        name: "enrollValidator",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32[]",
                name: "_domains",
                type: "uint32[]",
            },
            {
                internalType: "address[][]",
                name: "_validators",
                type: "address[][]",
            },
        ],
        name: "enrollValidators",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_origin",
                type: "uint32",
            },
            {
                internalType: "bytes32",
                name: "_originMailbox",
                type: "bytes32",
            },
        ],
        name: "getDomainHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "_address",
                type: "address",
            },
        ],
        name: "isEnrolled",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "moduleType",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
            {
                internalType: "uint8",
                name: "_threshold",
                type: "uint8",
            },
        ],
        name: "setThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32[]",
                name: "_domains",
                type: "uint32[]",
            },
            {
                internalType: "uint8[]",
                name: "_thresholds",
                type: "uint8[]",
            },
        ],
        name: "setThresholds",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        name: "threshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "_validator",
                type: "address",
            },
        ],
        name: "unenrollValidator",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
        ],
        name: "validatorCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
        ],
        name: "validators",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "validatorsAndThreshold",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_metadata",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class TestLegacyMultisigIsm__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestLegacyMultisigIsm__factory = TestLegacyMultisigIsm__factory;
TestLegacyMultisigIsm__factory.bytecode = _bytecode;
TestLegacyMultisigIsm__factory.abi = _abi;
//# sourceMappingURL=TestLegacyMultisigIsm__factory.js.map