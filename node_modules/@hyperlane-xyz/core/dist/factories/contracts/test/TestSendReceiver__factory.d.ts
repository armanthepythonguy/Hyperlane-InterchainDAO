import type { TestSendReceiver, TestSendReceiverInterface } from "../../../contracts/test/TestSendReceiver";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, Overrides } from "ethers";
declare type TestSendReceiverConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestSendReceiver__factory extends ContractFactory {
    constructor(...args: TestSendReceiverConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<TestSendReceiver>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): TestSendReceiver;
    connect(signer: Signer): TestSendReceiver__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506106ef806100206000396000f3fe6080604052600436106100345760003560e01c806312f762221461003957806356d5d47514610061578063a778af8714610083575b600080fd5b34801561004557600080fd5b5061004f61c35081565b60405190815260200160405180910390f35b34801561006d57600080fd5b5061008161007c3660046104af565b610096565b005b61008161009136600461052e565b610159565b60006100a061043a565b905060006100af6010836105d7565b159050801561011e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f626c6f636b206861736820656e647320696e2030000000000000000000000000604482015260640160405180910390fd5b6040518281527f1e8284519093f867c8c8de794693d723718c98d6ad442f387dfd50dd1e3d93ba9060200160405180910390a1505050505050565b6040517ffa31de0100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff87169063fa31de01906101b49087903090889088906004016105eb565b6020604051808303816000875af11580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f7919061064c565b9050600061020361043a565b9050346102116005836105d7565b600003610393576000610225600283610665565b90506000610236600261c350610665565b6040517f11bf2c180000000000000000000000000000000000000000000000000000000081526004810187905263ffffffff8a1660248201526044810182905233606482015290915073ffffffffffffffffffffffffffffffffffffffff8a16906311bf2c189084906084016000604051808303818588803b1580156102bb57600080fd5b505af11580156102cf573d6000803e3d6000fd5b50505050508873ffffffffffffffffffffffffffffffffffffffff166311bf2c1883856102fc9190610679565b878b61030a8661c350610679565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935263ffffffff91909116602483015260448201523360648201526084016000604051808303818588803b15801561037357600080fd5b505af1158015610387573d6000803e3d6000fd5b50505050505050610430565b6040517f11bf2c180000000000000000000000000000000000000000000000000000000081526004810184905263ffffffff8716602482015261c350604482015233606482015273ffffffffffffffffffffffffffffffffffffffff8816906311bf2c189083906084016000604051808303818588803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b50505050505b5050505050505050565b6000610447600143610679565b40905090565b803563ffffffff8116811461046157600080fd5b919050565b60008083601f84011261047857600080fd5b50813567ffffffffffffffff81111561049057600080fd5b6020830191508360208285010111156104a857600080fd5b9250929050565b600080600080606085870312156104c557600080fd5b6104ce8561044d565b935060208501359250604085013567ffffffffffffffff8111156104f157600080fd5b6104fd87828801610466565b95989497509550505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461052b57600080fd5b50565b60008060008060006080868803121561054657600080fd5b853561055181610509565b9450602086013561056181610509565b935061056f6040870161044d565b9250606086013567ffffffffffffffff81111561058b57600080fd5b61059788828901610466565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826105e6576105e66105a8565b500690565b63ffffffff8516815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b60006020828403121561065e57600080fd5b5051919050565b600082610674576106746105a8565b500490565b818103818111156106b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea264697066735822122089313bd2515bb39d32ce714a1014b4c87b1eeae32efb799a98259beec0e1faac64736f6c63430008110033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): TestSendReceiverInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestSendReceiver;
}
export {};
//# sourceMappingURL=TestSendReceiver__factory.d.ts.map