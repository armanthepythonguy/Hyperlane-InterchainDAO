"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestLiquidityLayerMessageRecipient__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint32",
                name: "origin",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "sender",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "HandledWithTokens",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_origin",
                type: "uint32",
            },
            {
                internalType: "bytes32",
                name: "_sender",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "handleWithTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610226806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063352e7eff14610030575b600080fd5b61004361003e3660046100b7565b610045565b005b7fb7c0612375fc7af0365ef6a7c391b5d03e4cecd911abd67aea0d69039d4c722386868686868660405161007e96959493929190610168565b60405180910390a1505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146100b257600080fd5b919050565b60008060008060008060a087890312156100d057600080fd5b863563ffffffff811681146100e457600080fd5b955060208701359450604087013567ffffffffffffffff8082111561010857600080fd5b818901915089601f83011261011c57600080fd5b81358181111561012b57600080fd5b8a602082850101111561013d57600080fd5b6020830196508095505050506101556060880161008e565b9150608087013590509295509295509295565b63ffffffff8716815285602082015260a060408201528360a0820152838560c0830137600060c08583010152600060c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f870116830101905073ffffffffffffffffffffffffffffffffffffffff8416606083015282608083015297965050505050505056fea26469706673582212207652da29c99204251108b37adde55e233a3daf8c72226cec06058435076c600164736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class TestLiquidityLayerMessageRecipient__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestLiquidityLayerMessageRecipient__factory = TestLiquidityLayerMessageRecipient__factory;
TestLiquidityLayerMessageRecipient__factory.bytecode = _bytecode;
TestLiquidityLayerMessageRecipient__factory.abi = _abi;
//# sourceMappingURL=TestLiquidityLayerMessageRecipient__factory.js.map