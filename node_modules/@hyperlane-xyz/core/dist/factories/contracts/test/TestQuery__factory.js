"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestQuery__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_router",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "Owner",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
            {
                internalType: "uint256",
                name: "secret",
                type: "uint256",
            },
        ],
        name: "queryRouterOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "secret",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "receiveRouterOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract InterchainQueryRouter",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161073238038061073283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61069f806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317b25d9714610046578063a44e96111461005b578063f887ea401461006e575b600080fd5b61005961005436600461047d565b6100b7565b005b6100596100693660046104c6565b61018e565b60005461008e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60005473ffffffffffffffffffffffffffffffffffffffff16331461013c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5465737451756572793a206e6f742066726f6d20726f75746572000000000000604482015260640160405180910390fd5b6040805183815273ffffffffffffffffffffffffffffffffffffffff831660208201527f34d2021ff0fd2db323dd42aa3bfa1b627b77be8793f87537f7fe5961d02dc738910160405180910390a15050565b600080546040517f2ead72f600000000000000000000000000000000000000000000000000000000815263ffffffff8516600482015261022c9173ffffffffffffffffffffffffffffffffffffffff1690632ead72f690602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022991906104fb565b90565b60408051600180825281830190925291925060009190816020015b6102726040805160808101825260009181019182526060808201529081908152602001606081525090565b815260200190600190039081610247575050604080516004815260248082018352602080830180517f8da5cb5b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9182161790915284518084018a905285518082039094018452604401909452810180519093167f17b25d9700000000000000000000000000000000000000000000000000000000179092529192506103319184916103f1565b8160008151811061034457610344610514565b60209081029190910101526000546040517f8cc02cab00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690638cc02cab906103a790879085906004016105a7565b6020604051808303816000875af11580156103c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ea91906104fb565b5050505050565b61041c6040805160808101825260009181019182526060808201529081908152602001606081525090565b50604080516080810182526000818301819052606080830181905283518085018552918252602091820152825180840190935273ffffffffffffffffffffffffffffffffffffffff9590951682528185019390935282529181019190915290565b6000806040838503121561049057600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff811681146104bb57600080fd5b809150509250929050565b600080604083850312156104d957600080fd5b823563ffffffff811681146104ed57600080fd5b946020939093013593505050565b60006020828403121561050d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815180845260005b818110156105695760208185018101518683018201520161054d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000604080830163ffffffff8616845260208281860152818651808452606093508387019150838160051b88010183890160005b83811015610659578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa00185528151805189855280518a8601528701518885018a905261062d6080860182610543565b91880151858303868a01529190506106458183610543565b9688019694505050908501906001016105db565b50909a995050505050505050505056fea26469706673582212209f6e4216e545cc94ad42bb5feebdcd92cb6c5c5a86ec3492b4a18cb0608f75fb64736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class TestQuery__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_router, overrides) {
        return super.deploy(_router, overrides || {});
    }
    getDeployTransaction(_router, overrides) {
        return super.getDeployTransaction(_router, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestQuery__factory = TestQuery__factory;
TestQuery__factory.bytecode = _bytecode;
TestQuery__factory.abi = _abi;
//# sourceMappingURL=TestQuery__factory.js.map